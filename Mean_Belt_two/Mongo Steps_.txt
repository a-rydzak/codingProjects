/c/Program Files/MongoDB/Server/3.6/bin

run ./mongod.exe
run .use

-use new_db            --to create new db
switched to db new_db

-db.dropDatabase()     --to drop a database
{ "ok" : 1 }
show dbs
admin  0.000GB
local  0.000GB


-use test_app           --makes new db
-show collections       --tables of this mongo database

-db.createCollection('users') --makes a table of users

-db.users.drop()          --drop the users collections

-db.users.insert({name: "Trey"})     --pass in a json object  (document oriented database)

-db.users.insert({name: "Michael", status: "paid_up"})

-db.ninjas.find({})  takes in a document or db.ninjas.find().pretty

-db.ninjas.find({name: "Trey"}) --- Create in CRUD

-cls to clear

-db.users.insert({name: "Andrew"})

-db.users.find(ObjectId('5af0517738fcb600a8a800e5')) -- find by id

-db.users.remove({name: 'Andrew'})  ---to remove

-db.users.remove({name: 'Andrew'}, true)  ----to remove a certain amount, Just Remove One

-db.users.update({name:'Andrew'},{location: 'dallas'}) the query find and the update, default overides all data except object ID
	bad stuff I guess

-db.users.update({name:'Andrew'},{$set: {location: 'tyler'}})  ---update operator to not destroy other ducument data

---If I wanted to get all the Dojos whose number of students is greater than 15, I would run the following:

db.dojos.find({number_of_students: {$gt: 15}})

$gt (greater than)	        Use to query selectively on numerical-valued fields
$gte (greater than or equal to)	Use to query selectively on numerical-valued fields
$lt (less than)	                Use to query selectively on numerical-valued fields
$lte (less than or equal to)	Use to query selectively on numerical-valued fields
$in (in array)	                Use to find documents who have a particular value within an array


	db.students.update({_id: ObjectId("5463d871a6a96d5ed6252f4d")}, {$push: {interests: 'snowboarding'}})


-The $push operator is a key of the update document, and its value is another document with a key of interests, and a value of 'snowboarding'.  Spend some time going over this if you don't understand.  Here are a couple common array update operators to get familiar with:


$push	Push to an array contained within a document.
$pop	Removes either the first or last element from an array. EX:

	db.COLLECTION.update({QUERY}, {$pop: {array_key: (1 or -1)}})
  
Use 1 for the last item in the array, -1 for the first item.

$addToSet	It functions just like $push.  However, $addToSet only adds to the specified array if the value doesn't already exist (thereby preventing duplicate entries).
$pull	        Removes a specified value from an array, unlike $pop, which removes by location. Ex:

	db.COLLECTION.update({QUERY}, {$pull: {array_key: VALUE}})
  
This will remove all instances of VALUE from the documents with the array specified by the array_key that match QUERY.